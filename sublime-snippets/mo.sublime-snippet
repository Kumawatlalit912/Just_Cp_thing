<snippet>
	<content><![CDATA[
const int N = 3e5 + 10;
const int S = 550; //sqrt(N)

int a[N];

void add(int idx) {
}

void remove(int idx) {
}

struct Query {
  int l, r, idx;

  Query() {}
  Query(int l_, int r_, int idx_) {
    l = l_; r = r_; idx = idx_;
  }
  pi toPair() const {
    return make_pair(l / S, ((l / S) & 1)? -r: r);
  }
};

bool operator<(const Query& L, const Query& R) {
  return L.toPair() < R.toPair();
}

signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(10);
  int n, m;
  cin >> n >> m;
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }
  vector<Query> Q(m);
  for (int i = 0; i < m; i++) {
    int l, r;
    cin >> l >> r;
    l--; r--;
    Q[i] = Query(l, r, i);
  }
  sort(all(Q));
  vector<int> res(m);
  int l = 0, r = -1;
  for (Query q : Q) {
    while (r < q.r) {
      r++;
      add(r);
    }
    while (l > q.l) {
      l--;
      add(l);
    }
    while (r > q.r) {
      remove(r);
      r--;
    }
    while (l < q.l) {
      remove(l);
      l++;
    }
    res[q.idx] = ans;
  }
  for (int i = 0; i < m; i++) {
    cout << res[i] << "\n";
  }
  return 0;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>mo</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
